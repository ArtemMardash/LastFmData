// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicFM.API.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MusicFM.API.Migrations
{
    [DbContext(typeof(MusicFmDbContext))]
    partial class MusicFmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArtistDbTagDb", b =>
                {
                    b.Property<Guid>("ArtistDbMbid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uuid");

                    b.HasKey("ArtistDbMbid", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ArtistDbTagDb");
                });

            modelBuilder.Entity("MusicFM.API.Infrastructure.Persistence.DbEntities.AlbumDb", b =>
                {
                    b.Property<Guid>("Mbid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistsMbid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Playcount")
                        .HasColumnType("bigint");

                    b.HasKey("Mbid");

                    b.HasIndex("ArtistsMbid");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MusicFM.API.Infrastructure.Persistence.DbEntities.ArtistDb", b =>
                {
                    b.Property<Guid>("Mbid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Mbid");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("MusicFM.API.Infrastructure.Persistence.DbEntities.TagDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Reach")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ArtistDbTagDb", b =>
                {
                    b.HasOne("MusicFM.API.Infrastructure.Persistence.DbEntities.ArtistDb", null)
                        .WithMany()
                        .HasForeignKey("ArtistDbMbid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusicFM.API.Infrastructure.Persistence.DbEntities.TagDb", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicFM.API.Infrastructure.Persistence.DbEntities.AlbumDb", b =>
                {
                    b.HasOne("MusicFM.API.Infrastructure.Persistence.DbEntities.ArtistDb", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistsMbid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("MusicFM.API.Infrastructure.Persistence.DbEntities.ArtistDb", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
